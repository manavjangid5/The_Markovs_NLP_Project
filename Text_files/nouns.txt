Undergraduate
Topics
Computer
Science
UTiCS
content
graduates
areas
information
science
core
material
topics
applications
books
concise
approach
self-study
course
texts
experts
fields
board
examples
problems
solutions
Department
Engineering
IIT
Delhi
India
Ian
Mackie
E´
cole
Polytechnique
France
University
Sussex
UK
Samson
Abramsky
Oxford
Chris
Hankin
Imperial
College
London
Dexter
Kozen
Cornell
USA
Andrew
Pitts
Cambridge
Hanne
Riis
Nielson
Technical
Denmark
Steven
Skiena
Stony
Brook
David
Zhang
Hong
Kong
Polytechnic
ISSN
ISBN
A
catalogue
record
book
Library
Congress
Control
Number
Apart
dealing
purposes
research
study
criticism
review
Copyright
Designs
Patents
Act
publication
form
means
permission
writing
publishers
case
reproduction
accordance
terms
licenses
Licensing
Agency
Enquiries
use
names
trademarks
etc.
absence
statement
laws
regulations
publisher
representation
express
regard
accuracy
responsibility
liability
errors
omissions
Software
subjects
range
area
passes
time
concepts
knowledge
insight
application
software
students
skills
project
effort
practices
techniques
majority
projects
industry
today
team
months
semester
motivation
goal
number
objectives
student
background
studies
engineering
courses
Ad-
dimensions—engineering
management—this
tasks
dimensions
manner
chapter
requirements
sis
specification
architecture
design
module
level
unit
testing
management
ning
monitoring
control
planning
tion
problem
domain
concept
process
introduction
goals
reader
task
discussion
output
quality
properties
methods
notations
explanations
learnings
end
exercises
Engi-
neering
undergraduate
graduate
program
exposure
professionals
state—know
programming
support
resources
website
URL
site
include
powerpoint
presentations
format
instructors
style
templates
outputs
practice
inspections
gratitude
editor
Wayne
Wheeler
idea
introductory
opportunity
thanks
wife
Shikha
daughters
Sumedha
Sunanda
moods
hours
Ask
question
system
lines
C
Java
code
answer
ming
expertise
chance
professor
productivity
LOC
person-month
scenario—we
act
clients
company
business
figure
lot
systems
organization
difference
scenarios
month
college
things
demonstration
P.
Jalote
Concise
Introduction
nothing
significance
depends
presence
bugs
lack
concern
issues
usability
maintainability
portability
etc
hand
client
’
part
malfunction
impact
loss
inconvenience
users
property
life
respect
reliability
need
way
cost
rule
thumb
Brooks
times
]
strength
rest
term
remainder
schedule
forces
scale
change
attributes
solution
approaches
distinguishes
others
play—cost
parameters
Industrial-strength
fact
development
costs
state
Lines
thousands
KLOC
measure
size
employed
person-months
tivity
cycle
companies
line
Schedule
factor
Business
trends
market
product
delivery
history
cases
Clearly
velopment
Productivity
ule
concerns
work
potential
job
people
Hence
pursuit
driving
force
reason
tools
Today
mantras
strategies
instances
unreliability
software—the
something
high-quality
ware
context
elaboration
standard
suggests
Figure
Functionality
capability
functions
needs
Reliability
service
Usability
Efficiency
performance
relative
amount
Maintainability
rections
improvements
adaptation
Portability
ments
actions
purpose
ferent
criterion
defects
objective
defect
density
define
data
projects—if
definition
word
standards
latter
attribute
interest
ability
maintenance
phase
components
age
cause
art
Maintenance
environment
maintenance-to-development-cost
ratio
interest—it
acteristics
characteristics—scale
tens
Sizes
products
Table
set
example
point
room
versus
census
country
validation
addition
counting
programs
ment
words
method
Large
characteristic
Change
ap-
proaches
start
proceeds
ing
changes
embrace
requests
%
ployed
place
source
world
Changes
tic
s
resistant
input
resource
functionality
ity
efficiency
thousand
customers
differences
industrial-strength
E
measurements
measures
accounting
computation
mistakes
execution
operation
files
understanding
deals
retirement
Q
P
factors
processes
technology
Tools
aids
help
focus
disciplines
type
databases
heart
nology
Role
model
role
models
process—waterfall
tive
RUP
timeboxing
XP
structure
phases
sequence
steps
men-
instance
role—it
increases
challenge
description
entity
Process
pre-
sumably
”
class
situations
compilation
recipe
success
stages
stage
subprocess
nonsoftware
training
activity
purview
process—a
cess
specifies
activities
Effective
key
user
items
versions
evolution
ration
component
integrity
constituent
availability
technologies
improvement
goods
relationship
Fig-
ure
programmers
designers
testers
configuration
group
controller
SEPG
subprocesses
methodologies
otherwise
production
coding
order
degrees
freedom
types
“
path
outcome
constraints
conditions
premise
benefits
guidelines
importance
section
Royce
[
variations
nature
flow
gins
feasibility
analysis
begins
completion
separation
concerns—each
handle
engineers
managers
complexity
planning.
Planning
plan
ordering
consequences
First
beginning
tification
mechanism
verification
consequence
certification
tivities
documents
document
advantages
waterfall
simplicity
series
setup—as
money
customer
limitations
hardware
years
speed
verge
bang
shot
risks
middle
value
proposition
stakeholders
features
miliar
limitation
prototype
Development
ob-
feel
results
Prototyping
play
inputs
algorithms
prototyping
version
experience
feedback
developers
judgment
alysts
benefit
requirement
return
handling
recovery
conformance
formats
prototypes
parts
understood
test
consumes
expenditure
cost-cutting
percent
returns
Third
confidence
technique
tions
tries
typing
increments
increment
enhancement
step
implementation
subset
aspects
implement
list
contains
result
iteration
track
redesign
entry
chances
error
changing
risk
iterations
future
rework
and/or
discarding
require-
proach
building
release
Selecting
advantage
upfront
view
tecture
culties
reasons
popularity
scenario
investment
mits
businesses
capabilities
working
Rational
Unified
IBM
Modeling
Language
UML
cycles
milestone
inception
scope
lifecycle
vision
decision
usage
ations
perception
decisions
choice
ture
Outputs
evaluation
construction
manuals
transition
opment
conversion
personnel
milestones
Though
deliverable
beta-testing
high-level
details
feature
gineering
Different
groups
workflows
correspond
One
multiple
quirements
So
degree
flexibility
reality
situation—it
volume
pend
pattern
medium
Overall
parallelism
commences
parallel
teams
box
duration
contrast
perspective
commitment
Furthermore
stage—tasks
assumption
performs
renders
instructions
lel
instruction
deployment
analysts
predeployment
tests
timebox-1
build
timebox-2
timebox-
moves
timebox-3
progress
T
days
deliveries
T/
Contrast
project—the
teamwise
pipeline
spent
same—the
sum
situation
man-
power
manpower
quicker
Timeboxing
tures
developments
Agile
reaction
tation
principles
Working
communication
documentation
involvement
good-quality
Simple
elaborate
front
dates
individuals
agile
family
avoids
reliance
munication
representative
stories
sentences
descriptions
details—user
story
card
estimates
weeks
defines
releases
Frequent
Acceptance
Bugs
acceptance
priority
Details
pairs
pair
Chapter
Second
Fourth
integration
units
base
integrate
rules
rights
cation
members
metaphors
trust
visibility
ownership
spike
cult
meetings
day
pects
pace
member
manager
auction
university
administration
extension
deadline
complete
increase
competition
teams—one
destination
phases—analysis
istration
database
pre-requisites
records
registrations
selection
real-world
termination
Project
estimation
determination
staffing
plans
basis
interpretation
Whereas
process—termination
analysis—is
nation
learn
ten
postmortem
ther
report
discuss
detail
portant
focuses
progression
ones
reduces
phases—inception
oration
sign
intensity
varies
frame-
length
hence
programmer-pairs
driven
designs
consists
Which
office
staff
computers
interface
spreadsheet
in-house
store
Design
utilization
Hint
durations
effect
IEEE
condition
contract
Note
Approaches
interaction
Requirements
Specification
SRS
characteristics
diagram
origin
parties
developer
gap
agreement
plier
supplier
reference
determine
thorough
Studies
savings
removals
culminate
ument
Problem
statement.
Dur-
behavior
standing
analyst
listener
extent
clarifications
mation
brainstorming
Issues
languages
amounts
formation
redundancies
quence
As
shortcomings
precedes
modeling
interfaces
ease
e.g.
whereas
compliance
designer
tem
tool
plete
teristics
everything
responses
classes
language
writer
ambiguities
meets
Terminology
inconsistencies
object
conflict
event
e
f
states
transitivity
e.
Inconsistencies
Similarly
ers
stability
Stability
development—selection
completeness
additions
modifications
Incompleteness
disagreement
assumptions
harder
specifications
Completeness
ship
operations
validity
checks
equations
formula
ways
reservation
request
formance
constraint
terminals
sizes
capacity
response
throughput
eration
circumstances
Throughput
transactions
command
ranges
workload
cise
statements
x
transaction
choices
limits
bility
security
policies
Standards
Compliance
procedures
audit
logging
Hardware
Limitations
isting
restrictions
machines
storage
Fault
Tolerance
tolerance
Recovery
failure
Security
commands
access
kinds
quire
passwords
cryptography
log
assessment
threats
flaws
buffer
overflow
interactions
uct
User
attention
manual
screen
explanation
messages
mands
characters
function
memory
load
operating
message
notation
guide
one
sections
overview
aspect
system—how
Product
diagrams
relationships
organizations
modes
stimulus
hierarchy
spe-
cific
contents
menus
Communication
entities
processing
accuracies
mance
fault
summary
Use
Jacobson
connection
terminology
actor
person
interacts
actors
receiver
sender
UC
satisfaction
agent
behalf
VP
get
sales
growth
region
assistant
consumer
trigger
holders
Withdraw
ATM
bank
stakeholder
funds
account
Satisfaction
ditions
text
action
fails
exception
collection
subgoals
authentication
employ
havior
plement
dency
ellipse
dependency
arcs
community
Auction
System
UAS
subsystem
payments
buyer
seller
selling
buyers
sellers
holder
item
bid
auction.
cases—they
alyst
layman
points
name
UC2
persons
UC3
precondition
preconditions
exists
structures
delete
tracking
bidder
bidders
Similar
UC1
Primary
Actor
Seller
Precondition
Main
Success
Scenario
category
picture
prices
price
date
rating
bids
Blocks
max
bidding
Select
email
acct
commission
credit
search
browse
services
higher-level
subsystems
login
Generally
enterprise
UCs
period
candidate
HR
department
travel
lodging
interview
summary-level
post
guarantees
atomicity
guarantee
matter
occur
uses
elicitation
stepwise
refinement
levels
straction
abstraction
Actors
table
ios
interests
Failure
failures
Step
Understand
Interaction
cussion
sufficient
mar
specify
sense
enters
SSN
address
aim
t
consultants
principle
divide
conquer
partition
subproblems
subproblem
total
projection
partitioning
process-control
viewpoints
perspectives
projections
lem
Data
graphs
DFDs
discipline
DFD
transformation
transformations
aims
movement
circles
flows
arrows
bubbles
rectangle
sink
originator
workers
timesheet
worker
paycheck
employee
ID
rate
payment
overtime
rates
pay
taxes
tax
deduction
file
check
conventions
*
symbol
AND
B
OR
+
computations
calculators
folders
ledgers
paths
flowchart
thinking
considerations
loops
transforms
issue
graph
decomposition
together
starting
Often
sinks
sources
bubble
meaning
dictionary
expression
composition
bar
repetition
Entity
ERDs
ERD
ER
Entities
elements
boxes
sheet
row
Attributes
columns
ellipses
cluttering
identities
isolation
Relationships
element
vice
versa
diamond
employees
owner
cars
Employee
Supervisor
ticular
forms
many-to-one
many-to-many
M
sides
resent
cardinality
N
to-one
head
Head
entities—users
categories
Sell
tables
field
Due
tains
begin
misunderstanding
committing
mon
omission
inconsistency
ambiguity
Omission
Inconsistency
contradictions
incompatibility
Errors
meanings
effectiveness
average
percentage
A-
flight
distribution
domains
detection
fraction
reviews
minds
representatives
matters
author
someone
engineer
testability
readability
jobs
reviewers
criteria
inspection
A-33
possibilities
machine
sistency
pleteness
ysis
correctness
consistency
verifiability
exist
exercise
conference
authors
papers
chairs
paper
controlling
Lack
ticket
fronts
guiding
high-priority
mitigation
prerequisites
questions
overruns
bulk
Effort
tiveness
two-thirds
KLOC/PM
estimate
SIZE/P
b
constants
Values
regression
past
Watson
Felix
Federal
Systems
Division
SIZE
PM
.91
COnstructive
COst
MOdel
COCOMO
equation
ganic
=
Examples
driver
multiplying
ratings
.75
.88
EAF
adjustment
auctions
modules
drivers
Suppose
programmer
biases
difficulty
classification
mixture
strategy
procedure
Identify
simple
counts
tribution
scheduling
budgets
convenience
Person
dependencies
man
men
wheat
cotton
schedules
Empirical
fits
curve
scatter
plot
fort
guideline
square
root
ramp-up
Rayleigh
peak
PTS
peaks
proximations
slack
percentages
quarter
half
dimension
project—quality—needs
target
criteria—
injection
delivered
Defects
QC
moval
removal
revolves
themes
prevention
Reviews
attempt
fects
claims
topic
places
expectations
undertaking
events
Risk
event—it
tendency
Social
discourage
identification
kind
attitude
trouble
forefront
Boehm
injury
implies
possibility
occurrence
leave
effects
earthquake
complex
materializes
zone
Japan
California
dumping
ground
probability
occurring
materializing
Methods
checklists
surveys
Checklists
identification—most
survey
shortfalls
talent
Adequate
Underestimation
optimism
Projects
Gold
refers
gold
plating
probabilities
prioritization
losses
RE
Prob
UO
Loss
credibility
avoidance
comprises
consequent
threat
dynamism
status
impacts
high-probability
rank
itoring
reprioritization
measurement
advance
metrics
deadlines
delay
calendar
budget
closure
Defect
Size
editors
counters
policy
reporting
Measurements
schedule—this
Microsoft
Status
reports
stock
week
Again
Analysis
deviation
variation
fixing
Activities
ordination
de-
Dependencies
assignment
sion
Chief
Programmer
Team
..
checklist
exploding
shows
construction-iteration
Complete
column
initials
predecessors
serves
face
Risks
combination
Tasks
repository
drivers—product
vary
combinations
How
Any
options
middleware
server
Architecture
roles
views
connector
partitions
definitions
ements
abstractions
sent
Understanding
clude
builders
tects
macro
functional
vehicle
negotiation
Reuse
reuse
est
tates
families
share
maximum
Construction
Evolution
dent
dependence
alternatives
suit
ple
shopping
sentiment
drawing
floor
drawings
electricity
safety
firefighting
other—they
lysts
concepts—
packages
generalization
specialization
lection
runtime
identity
executing
Objects
objects
nectors
connectors
pipes
sockets
allocation
environments
run
processor
Module
analogy
buildings
house
emergency
fire
air
plumbing
space
wiring
construction—that
note
talks
meaning—
boundaries
architect
elements—components
Components
stores
Connectors
fines
system—
nents
nodes
edges
supporting
servers
filters
controllers
actuators
sensors
symbol/notation
symbols
infrastructure
call
mechanisms
TCP/IP
ports
protocol
HTTP
broadcast
bus
scription
campus
he/she
Web
HTML
compo-
tors
stand
host
Questions
http
browser
running
implications
nonstudent
Dean
Students
proxy
institute
password
cookie
plain
cookies
inaccuracy
facility
cache
call/return
sions
architectures
styles
ideas
Styles
network
filter
pipe
Filters
channel
streams
producer
buffering
synchronization
functioning
port
pipe-and-filter
thread
builder
frequency
split
Sequencer
Sorting
occurrences
sort
Signal
correction
components—data
repositories
accessors
data—these
care
concurrent
depository
other—the
transfer
blackboard
accessor
arrival
triggers
controls
blackboards
end—in
scripts
artifacts
translations
registration
Administrator
Registration
ister
Approvals
approvals
instructor
consent
Reports
Course
Feedback
cate
classrooms
Scheduling
style—read/write
read
updates
interacting
reads
writes
directories
connections
query
update
computing
paradigms
puting
paradigm
types—clients
straint
style—the
request/reply
nector
reply
replies
waits
tier
resides
ponent
reside
request/result
Many
TCP
distinction
layers
layer
Style
subscribes
intent
frameworks
mouse
click
Peer-to-peer
peers
invocations
CORBA
.NET
threads
passing
signing
architects
designing
recommendations
Just
portion
interact
center
presentation
umentation
following
Catalog
Provides
Interfaces
Rationale
tionship
easy
Behavior
teractions
deadlock
aid
collaboration
Information
creation
across
relate
rationale
ward
duplication
tween
straightforward
reveal
combining
consisting
mapping
sake
compactness
ADLs
annotation
header
modifiability
reusability
networks
quantitative
comprise
system—module
centerpiece
block
client-server
foundation
interactive
contain
Suggest
spective
blueprint
logic
methodology
applying
modularity
cohesion
coupling
chart
object-orientation
im-
Modularity
building—a
Coupling
modularization
edge
notion
attempts
interconnections
ules
interdependence
Highly
pling
obscurity
be-
rameters
internals
variables
Complexity
minimum
Transfer
Type
Connection
manifestation
OO
occurs
therefore
Component
C1
variable
parameter
subclasses
C.
whenever
i.e
Inheritance
inheritance
subclass
m
drops
B2
specialization-generalization
Within
spirit
signature
bonds
bond
Cohesion
intramodule
correlation
Coincidental
hesion
pieces
duplicate
flag
Modules
ities
initialization
cleanup
loop
print
punch
Communicationally
Functions
compute
array
sentence
Method
contribute
Class
symptom
understandability
generalization-specialization
superclass
hierarchies
existence
modification
Bertrand
Meyer
demands
enhancements
make
Code
side
Programmers
top
polymorphism
Client
printer
Printer1
printing
Printer
subtype
jects
Printer2
open-
encapsulate
Liskov
Substitution
Principle
o
o1
Graphical
charts
computer
arrow
invokes
subordinate
superordinate
direction
circle
tail
label
readnums
scanf
add_n
n
printf
i
switch
Add
numbers
/
D
D.
looping
subordinates
invocation
pass
transform
coordinate
Structured
deal
screens
exceptions
produce
Factoring
branches
Flow
Diagram
drawn
Notice
validate
debit
Most
Abstract
Input
Output
Elements
How-
blance
checking
formatting
incoming
stream
teller
dollar
input—but
abstract
Having
factoring
Transform
Branches
position
right
subtransform
count
thing
count-number-of-different-words
get-sorted-list
count-the-number-of-different-words
Object-oriented
offer
association
re-use
Common
patterns
readers
Classes
blocks
encapsulation
Encapsulation
reacts
values
copy
capabilities—it
fall
link—a
link
pointers
directions
associations
Links
client/server
An-
aggregation
plies
containment
implication
containing
links
Polymorphism
relation
present
superclasses
lies
parent
Nonstrict
substitution
heritance
theory
son
inheritance—an
binding
Dy-
moment
O
voked
x.O
x—if
contexts
tance
child
piece
skeletons
system—besides
Associations
Subtype
relationship—classes
subtypes
rectangular
convention
letter
uppercase
general
lowercase
body
stereotype
<
>
class/method/attribute
stereotypes
class—the
superclass—while
arrowhead
discriminator—a
discriminator
sets
IITKPerson
IITK
subclasses—Student
com-
UnderGraduate
PostGraduate
faculty
Institute
lationship
ends
multiplicity
tionships
Aggregation
gregation
sociation
Address
BiometricInfo
advances
expenses
Advances
relations
colon
clarify
List
John
Sequence
Collaboration
Diagrams
collaborate
participate
lifeline
downwards
self
timing
y-axis
graduation
lives
brackets
finishes
invoking
GradReport
Student
CourseTaken
laboration
numbering
ics
convincing
dynamics
Capabilities
system—class
ponents
package
node
cube
CPU
press
transitions
State
performing
Activity
oval
flow-charts
modeler
metaclass
utility
anything
pre-agreed
Notes
ent
vide
Identifying
lationships
phrases
tiple
Carefully
sex
hospital
height
weight
birth
county
populations
neighborhoods
specializations
assembly
see
belonging
Company
Dynamic
initiator
responder
Events
sensor
involves
rant
menu
kitchen
preparation
re-
bill
initiate
restaurant
executions
speaking
trace
Order
Functional
system—the
Internal
Operations
algorithm
optimization
feels
simpler
Optimize
Package
inefficiencies
mind
optimizations
Methodologies
ogy
Word
Counting
Let
File
Further
Counter
preference
opinion
reveals
batch
stays
uniqueness
addToHistory
tree
History
Btree
string
char
public
bool
operator
==
Checks
equality
void
setWord
getWord
Invokes
isEof
GENERIC
ELEMENT_TYPE
insert
lookup
declarations
C++
noncomment
nonblank
Rate
Returns
deter-
investments
investor
purchase
purchases
sale
shares
idends
portfolio
investors
calculator
forward
spreadsheets
interest—
Portfolio
Investment
Transaction
vestments
Investments
Transactions
Withdrawal
Deposit
withdrawal
withdrawals
deposit
int
investmentName
Name
transactArray
noOfTransacts
//
Total
rateOfReturn
getTransactDetails
Set
float
getRate
totCurVal
totDeposits
noOfInvestments
totalDeposits
totalCurVal
totalWithdrawl
RateOfReturns
getInvestDetails
fname
computeRate
Compute
printResults
Print
design—one
consistent
variety
dure
erty
cedure
heuristics
terminates
structions
resents
outer
conditionals
freer
whole
automaton
stack
push
pop
derstanding
declaration
faults
meeting
creativity
rics
Network
Metrics
caller
Deviation
impurity
Graph
pure
fan-in
drawback
routines
library
lowest-level
routine
correlations
approximation
callee
works
plexity
intermodule
inflow
outflow
Dc
interconnection
variant
hypothesis
fan
error-prone
tention
reduction
OOD
WMC
M1
M2
Mn
Mi
ci
Depth
Tree
DIT
OOD—the
deep
depth
ancestors
CBC
Response
RFC
Universal
mod-
eling
ptr
perform
Draw
Describe
tenance
experiment
Weinberg
clarity
hit
hiding
toring
skill
correct
higher-quality
grams
emphasis
cept
stood
gotos
nization
sequences
spondence
ecution
becomes
ification
assertion
post-condition
gram
pre-condition
proof
Hoare
segment
S
Assertion
assertions
semantics
S2
numerator
denominator
P2
S1
Q2
S-condition
behaviors
proofs
branching
constructs
single-entry
single-exit
correspondence
construct
argue
capture
leads
efforts
alternative
ledger
balance
debits
credits
Pascal
FORTRAN
guage
Gotos
goto
transfers
jump
Hiding
Types
Modern
facilities
codes
Nesting
nesting
become
deeply
if-then-elses
clause
Where
inefficiency
disjoint
Interface
Effects
Robustness
crash
dump
exit
Case
Default
default
bug
NULL
dereference
leak
y
Empty
Catch
Block
InputStream
fis
InputFile
Statement
mistake
try
Return
Finally
beliefs
Exception
nonexception
narios
Parameters
BUFFER
fragment
counter
src
destn
strcpy
Can
Trusted
Sources
prone
corruptions
parity
hashes
Importance
Exceptions
handlers
People
Coding
naming
layout
java.sun.com/docs
Conventions
lowed
mypackage
edu.iitk.maths
nouns
Day
DateOfBirth
EventHandler
PI
MAX
ITERATIONS
suffix
prefix
iterators
j
k
Boolean
confusion
isStatus
boolean
isNotCorrect
computeMean
OutOfBoundEx-
ception
Files
con-
.java—this
compilers
Line
ters
continuation
Statements
everyone
Declare
ables
Loop
Avoid
expressions—introduce
vari-
Layout
Comments
English
program—if
comments
dalone
prologue
prologues
comment
spaces
Indentation
fragments
round
future—through
TDD
sync
pens
lower-priority
tionality
higher-priority
thoroughness
Pair
nique
individual
partners
reading
accountability
Impact
this—how
ates
executables
CVS
UNIX
www.cvshome.org
VSS
Windows
directory
revision
deltas
arise
official
permissions
maintains
Commands
checkout
Make
remain
commit
copies
Source
tory
conflict—different
conflit
Conflicts
versions—at
protection
sources—an
Makefile
consuming
prevent
decay
Refactoring
shape
development—code
refactoring
ologies
implements
ties
break
suite
preserves
affair
refactorings
evolves
improves
find
debugging
design—the
longer
healthier
signs
smells
Duplicate
Parameter
Complex
Presence
Generality
Between
calls
Message
chain
catalog
Unit
Selection
tester
fixes
stubs
Drivers
Stubs
dummy
stub
manner—the
depend
g
bottom
Testing
hard
intervention
automation
framework
result—this
executable
Otherwise
CuTest
CUnit
Cutest
Check
suites
Junit
www.junit.org
CUT
CUTtest
constructor
setUp
TestRunner
testxxxx
xxx
setup
Assert-
True
AssertFalse
Matrix.java
matrices
Matrix
matrix
add
subtract
multiply
determinant
testAdd
col
//Order
Sets
rows
cols
//Constructs
elts
console
setElement
elt
noOfRows
noOfCols
sub
mul
multiplies
transpose
minor
double
inverse
prints
equals
priori
script
button
MatrixTest
TestCase
String
testcase
,6
,5
,2
,21
,12
d
,3
,8
,9
c
,27
,17
res=A
assertTrue
null
res
C=new
i=0
i++
j=0
j++
A.
getElement
,261
,207
res=res
dd
,0
,1
DD=new
DD
i.e.
Inspections
Fagan
describe
participants
Inspection
inspectors
moderator
self-review
follow-up
opening
reviewer
self-preparation
Ideally
span
logs
examination
charge
session
attacks
convenient
paraphrasing
clarifies
scribe
breakup
hour
sues
Traditionally
Final
deficiencies
Currently
Halstead
operators
operands
quantities
f1
jth
f2
operand
vocabulary
V
bits
log2
rences
Volume
Experiments
Cyclomatic
repeat
McCabe
G
arc
C-like
sorting
anomalies
ber
circuits
circuit
ckt
sures
Measure
n1
N1
N2
operators—one
ficulty
N2/n
Variables
considers
spans
references
Knot
Count
locations
knot.
knot
intersection
jumps
p
q
rise
min
Problems
scheme
intersect
regions
dards
programmers—both
undoing
qualities
class/procedure
pare
procedure/class
procedure/classe
integers
Binary
Determine
Compare
software—
SUT
Basic
harness
process—how
Test
coverage
psychology
discrepancy
ideal
Error
inability
Failures
observance
debugging.
ter
r
case—it
ingenuity
beings
intellect
adversary
setting
faulty
literature
SUTs
tasks—test
identifies
allel
matches
Features
deliverables
Deliverables
Sometimes
rounds
fail
Hopefully
Evaluation
chosen
totality
on-the-fly
fix
hundreds
closing
anyone
anytime
submitter
closed.
none
domly
equivalence
classes—one
Equivalence
ues
Max
bound
character
integer
cover
inputs—a
s.
n.
EQ6
IEQ1
IEQ2
IEQ3
EQ5
boundary
Boundary
extreme
cases.
invalid
values—the
yond
Y
cases—too
settings
devices
fare
traveler
telephone
billing
airline
weekend
mode
values—an
combinatorial
pairwise
∗
−
/2
platforms
browsers
desire
Operating
Solaris
Linux
Memory
erating
a1
a2
a3
b1
b2
b3
c1
c2
c3
covers
A-B
B-C
A-C
online
generation
Start
Efficient
Pairwise
hotel
configurations
treatment
division
divisor
intuition
guessing
Psychology
devil
advocate
chapters
blank
blanks
shoes
coder
chine
States
Transitions
richer
archi-
back
receiving
recovers
T.
AT
ATP
cent
Transition
TT
t2
t1
t3
menting
by-product
G.
corresponding
n2
nk
shortcoming
x=0
branch
Branch
Thus
decision/condition
subpaths
restriction
pointer
zero
compound
undecidability
mutants
ria
instrumenting
probes
Probe
insertion
preprocessor
tool—sometimes
representations
portions
management—it
random
phenomenon
X
t.
MTTF
lifetime
warranty
DRE
black-box
white-box
Coverage
manipulation
Z
vending
quarters
soda
formatter
BL
NL
MAXPOS
breaks
outchar
fill
bufpos
F.
B.
Abreu
R.
Carapuca
Candidate
Journal
:87–96
Jan.
V.
Basili
Tutorial
Press
L.
Briand
W.
Melo
indicators
En-
:751–761
Oct.
Turner
Iterative
SE-1
Dec.
M.
Weiss
Int
Conf
Bass
Clements
Rick
Kazman
Practice
Edition
Addison-Wesley
Professional
K.
Beck
Extreme
Programming
Explained
Driven
Example
Profes-
sional
R.V
Binder
Systems—Model
Patterns
Computers
Society
Economics
Prentice
Hall
Englewood
Cliffs
NJ
economics
:135–152
Sept.
Booch
mings
Man
Month
N.
Brown
July
R.N
Charette
Management
Mc-
Graw
Hill
Large-scale
E.
Chen
Program
SE-4:187–194
May
S.
Chidamber
Kemerer
:476–493
June
T.S
Chow
SE-4
:178–187
Bachmann
Garlan
J.
Ivers
Little
Nord
Stafford
Architectures
Views
Beyond
Cockburn
Cases
D.M
Cohen
S.R
Dalal
M.L
Fredman
G.C
Patton
AETG
:437–443
Conte
H.
Dunsmore
Y.
Shen
Met-
Models
Benjamin/Cummings
Publishing
Davis
Identification
Technology
:472–476
Nov.
DeMarco
Yourdon
Dobrica
Niemela
:638–653
Eder
Kappel
Schrefl
Klagenfurt
:182–211
:744–751
Farr
Lyu
McGraw
I.
Feldman
Make—a
Experience
:255–265
March
Fowler
Distilled—A
Brief
Guide
Standard
Object
Brant
Opdyke
Roberts
Existing
Freedman
Handbook
Walkthroughs
Inspec-
Reviews—Evaluating
Programs
Prod-
ucts
Dorset
House
Gamma
Helm
Johnson
Vlissides
Patterns—
Reusable
Gilb
Graham
Gomma
Scott
Fifth
Goodenough
Gerhart
SE-1:156–173
Goodman
Hedetniemi
Algorithms
McGraw-Hill
Grady
Caswell
Slack
Key
lessons
E.M.
hancement
Elsevier
North-Holland
Harrison
Magel
Kluczny
DeKock
Applying
Henry
Kafura
:510–518
:561–573
nications
ACM
:335–355
IBMwebsite
glossary
Report
International
Organization
engineering—product
Quality
ISO9126-1
Engineering—A
Approach
CMM
Practice—Processes
Executing
Infosys
Palit
Kurien
Vol
pages
Academic
Peethamber
S.H
Kan.
Addison-
Wesley
Korson
Gregor
Communications
:40–60
Kruchten
Lie
:111–122
SIGPLAN
Notices
Oriented
Musa
Iannino
Okumoto
Reliability—
Measurement
Prediction
Application
Myers
Art
Wiley-Interscience
New
York
Offutt
Liu
Abdurazik
Ammann
Verifi-
:25–53
M.S
Phadke
Crosstalk
Oct
Putnam
SE-4:345–361
Industrial
Strength
Man-
agement
Using
Rapps
Weyuker
:367–375
Apr
Proc
ICSE-9
Wescon
Aug
SEI
Capability
Maturity
Model
Guidelines
Shaw
Perspectives
Discipline
Smith
Robson
lems
Conference
Main-
Object-Oriented
Stevens
Constantine
Trivedi
Probability
Statistics
Queuing
Applications
Schulman
Goals
Factors
:70–77
Weller
Lessons
Wirth
:221–227
April
Woodward
Hennell
Hedley
SE-5:45–50
Yeh
Zave
Proceedings
:1077–1088
Yin
Winchester
establishment
Zage
Evaluating
Build
Configuration
Estimation
Pre-condition
Requirement
Single-entry
Structure